<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.EmpMapper">

    <!--    List<Emp> getAllEmp();-->
    <select id="getAllEmp1" resultType="Emp">
                select eid,emp_name empName,age,sex,email from t_emp
<!--        select * from t_emp-->
    </select>

    <!--    resultMap:设置自定义映射关系
                id:唯一标识，不能重复
                type:设置映射关系中的类型
                子标签:
                    id:设置主键的映射关系
                    result:设置普通字段的映射关系-
                属性:
                    property:设置映射关系中的属性关系，必须是type属性所设置的实体类型中的属性名
                    column:设置映射关系中的字段名，必须是sql语句查询出的字段名
                    -->
    <resultMap id="empResultMap" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
    </resultMap>
    <select id="getAllEmp" resultMap="empResultMap">
        select * from t_emp
    </select>


    <!--    处理多对一映射关系方式一:级联属性赋值-->
<!--    <resultMap id="empAndDeptResultMapOne" type="Emp">-->
<!--        <id property="eid" column="eid"/>-->
<!--        <result property="empName" column="emp_name"/>-->
<!--        <result property="age" column="age"/>-->
<!--        <result property="sex" column="sex"/>-->
<!--        <result property="email" column="email"/>-->
<!--        <result property="dept.did" column="did"/>-->
<!--        <result property="dept.deptName" column="dept_name"/>-->
<!--    </resultMap>-->
    <!--    Emp getEmpAndDept(@Param("eid") int eid);-->
    <!--    <select id="getEmpAndDept" resultMap="empAndDeptResultMapOne">-->
    <!--        select * from t_emp left join t_dept on t_emp.did = t_dept.did where t_emp.eid=#{eid}-->
    <!--    </select>-->


    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <!--        association:处理多对一的映射关系
                     property:需要处理多对的映射关系的属性名
                     javaType：该属性的类型-->
        <association property="dept" javaType="Dept">
            <id property="did" column="did"/>
            <result property="deptName" column="dept_name"/>
        </association>
    </resultMap>
    <select id="getEmpAndDept" resultMap="empAndDeptResultMapTwo">
        select * from t_emp left join t_dept on t_emp.did = t_dept.did where t_emp.eid=#{eid}
    </select>







    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id property="eid" column="eid"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <!--        select:设置分步查询的sql的唯一标识（namespace.SQLId或mapper接口的全类名.方法名）
                     column:设置分步查询的条件
                     fetchType:当开启了全局的延迟加载之后，可通过此属性手动控制延迟加载的效果-->
        <association property="dept"
                     select="com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     fetchType="lazy"
                     column="did"/>
    </resultMap>
    <!--    Emp getEmpAndDeptByStepOne(@Param("eid") Integer id);-->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepResultMap">
        select * from t_emp where eid = #{eid}
    </select>




<!--    List<Emp> getDeptAndByStepTwo(@Param("did") Integer did);-->
    <select id="getDeptAndByStepTwo" resultType="Emp">
        select * from t_emp where did = #{did}
    </select>
</mapper>
